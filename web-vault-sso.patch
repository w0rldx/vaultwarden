diff --git a/apps/web/src/404.html b/apps/web/src/404.html
index 6cf5e36..54d1149 100644
--- a/apps/web/src/404.html
+++ b/apps/web/src/404.html
@@ -42,11 +42,10 @@
         </a>
       </p>
       <p>
-        You can <a href="/">return to the web vault</a>, check our
-        <a href="https://status.bitwarden.com/">status page</a> or
-        <a href="https://bitwarden.com/contact/">contact us</a>.
+        You can <a href="/">return to the web vault</a>, or
+        <a href="https://github.com/dani-garcia/vaultwarden">contact us</a>.
       </p>
     </div>
-    <div class="container footer text-muted content">© Copyright 2022 Bitwarden, Inc.</div>
+    <div class="container footer text-muted content">© Copyright 2022 Bitwarden, Inc. (Powered by Vaultwarden)</div>
   </body>
 </html>
diff --git a/apps/web/src/app/app.component.ts b/apps/web/src/app/app.component.ts
index b1700a8..9f4145f 100644
--- a/apps/web/src/app/app.component.ts
+++ b/apps/web/src/app/app.component.ts
@@ -170,6 +170,10 @@ export class AppComponent implements OnDestroy, OnInit {
             break;
           }
           case "showToast":
+            if (typeof message.text === "string" && typeof crypto.subtle === 'undefined') {
+              message.title="This browser requires HTTPS to use the web vault";
+              message.text="Check the Vaultwarden wiki for details on how to enable it";
+            }
             this.showToast(message);
             break;
           case "setFullWidth":
diff --git a/apps/web/src/app/core/init.service.ts b/apps/web/src/app/core/init.service.ts
index 0f61efb..da38c03 100644
--- a/apps/web/src/app/core/init.service.ts
+++ b/apps/web/src/app/core/init.service.ts
@@ -37,11 +37,23 @@ export class InitService {
   ) {}
 
   init() {
+    function getBaseUrl() {
+      // If the base URL is `https://vaultwarden.example.com/base/path/`,
+      // `window.location.href` should have one of the following forms:
+      //
+      // - `https://vaultwarden.example.com/base/path/`
+      // - `https://vaultwarden.example.com/base/path/#/some/route[?queryParam=...]`
+      //
+      // We want to get to just `https://vaultwarden.example.com/base/path`.
+      let baseUrl = window.location.href;
+      baseUrl = baseUrl.replace(/#.*/, '');  // Strip off `#` and everything after.
+      baseUrl = baseUrl.replace(/\/+$/, ''); // Trim any trailing `/` chars.
+      return baseUrl;
+    }
     return async () => {
       await this.stateService.init();
 
-      const urls = process.env.URLS as Urls;
-      urls.base ??= this.win.location.origin;
+      const urls = {base: getBaseUrl()};
       this.environmentService.setUrls(urls);
 
       setTimeout(() => this.notificationsService.init(), 3000);
diff --git a/apps/web/src/app/core/web-platform-utils.service.ts b/apps/web/src/app/core/web-platform-utils.service.ts
index 115d534..e62638e 100644
--- a/apps/web/src/app/core/web-platform-utils.service.ts
+++ b/apps/web/src/app/core/web-platform-utils.service.ts
@@ -188,11 +188,11 @@ export class WebPlatformUtilsService implements PlatformUtilsService {
   }
 
   isDev(): boolean {
-    return process.env.NODE_ENV === "development";
+    return false;
   }
 
   isSelfHost(): boolean {
-    return process.env.ENV.toString() === "selfhosted";
+    return false;
   }
 
   copyToClipboard(text: string, options?: any): void | boolean {
diff --git a/apps/web/src/app/layouts/footer.component.html b/apps/web/src/app/layouts/footer.component.html
index 98836bf..a5356be 100644
--- a/apps/web/src/app/layouts/footer.component.html
+++ b/apps/web/src/app/layouts/footer.component.html
@@ -1,6 +1,6 @@
 <div class="container footer text-muted">
   <div class="row">
-    <div class="col">&copy; {{ year }} Bitwarden Inc.</div>
+    <div class="col">&copy; {{ year }} Bitwarden Inc. (Powered by Vaultwarden)</div>
     <div class="col text-center"></div>
     <div class="col text-right">
       {{ "versionNumber" | i18n: version }}
diff --git a/apps/web/src/app/layouts/frontend-layout.component.html b/apps/web/src/app/layouts/frontend-layout.component.html
index d737bc9..8db146f 100644
--- a/apps/web/src/app/layouts/frontend-layout.component.html
+++ b/apps/web/src/app/layouts/frontend-layout.component.html
@@ -1,5 +1,5 @@
 <router-outlet></router-outlet>
 <div class="container my-5 text-muted text-center">
-  &copy; {{ year }} Bitwarden Inc. <br />
+  &copy; {{ year }} Bitwarden Inc. (Powered by Vaultwarden)<br />
   {{ "versionNumber" | i18n: version }}
 </div>
diff --git a/apps/web/src/app/layouts/navbar.component.html b/apps/web/src/app/layouts/navbar.component.html
index ee428cb..4294ebd 100644
--- a/apps/web/src/app/layouts/navbar.component.html
+++ b/apps/web/src/app/layouts/navbar.component.html
@@ -69,7 +69,7 @@
               <i class="bwi bwi-fw bwi-user" aria-hidden="true"></i>
               {{ "accountSettings" | i18n }}
             </a>
-            <a bitMenuItem href="https://bitwarden.com/help/" target="_blank" rel="noopener">
+            <a bitMenuItem href="https://github.com/dani-garcia/vaultwarden/" target="_blank" rel="noopener">
               <i class="bwi bwi-fw bwi-question-circle" aria-hidden="true"></i>
               {{ "getHelp" | i18n }}
             </a>
diff --git a/apps/web/src/app/organizations/organization-routing.module.ts b/apps/web/src/app/organizations/organization-routing.module.ts
index 5ce58d1..79b5e33 100644
--- a/apps/web/src/app/organizations/organization-routing.module.ts
+++ b/apps/web/src/app/organizations/organization-routing.module.ts
@@ -13,12 +13,13 @@ import { ManageComponent } from "./manage/manage.component";
 import { PeopleComponent } from "./manage/people.component";
 import { PoliciesComponent } from "./manage/policies.component";
 import {
-  canAccessOrgAdmin,
   canAccessManageTab,
+  canAccessOrgAdmin,
   canAccessSettingsTab,
   canAccessToolsTab,
 } from "./navigation-permissions";
 import { AccountComponent } from "./settings/account.component";
+import { OpenIdComponent } from "./settings/openid.component";
 import { OrganizationBillingComponent } from "./settings/organization-billing.component";
 import { OrganizationSubscriptionComponent } from "./settings/organization-subscription.component";
 import { SettingsComponent } from "./settings/settings.component";
@@ -205,6 +206,15 @@ const routes: Routes = [
             component: OrganizationSubscriptionComponent,
             data: { titleId: "subscription" },
           },
+          {
+            path: "openid-connect",
+            component: OpenIdComponent,
+            canActivate: [OrganizationPermissionsGuard],
+            data: {
+              titleId: "openid",
+              organizationPermissions: (org: Organization) => org.canManageSso,
+            },
+          },
         ],
       },
     ],
diff --git a/apps/web/src/app/organizations/settings/openid.component.html b/apps/web/src/app/organizations/settings/openid.component.html
new file mode 100644
index 0000000..8066a7c
--- /dev/null
+++ b/apps/web/src/app/organizations/settings/openid.component.html
@@ -0,0 +1,98 @@
+<div class="page-header">
+  <h1>Openid Connect Settings</h1>
+</div>
+<div *ngIf="loading">
+  <i
+    class="bwi bwi-spinner bwi-spin text-muted"
+    title="{{ 'loading' | i18n }}"
+    aria-hidden="true"
+  ></i>
+  <span class="sr-only">{{ "loading" | i18n }}</span>
+</div>
+<form
+  *ngIf="ssoConfig && !loading"
+  #form
+  (ngSubmit)="submit()"
+  [appApiAction]="formPromise"
+  ngNativeValidate
+>
+  <div class="row">
+    <div class="col-6">
+      <div class="form-group">
+        <div class="form-check">
+          <input
+            type="checkbox"
+            class="form-check-input"
+            id="allowOpenId"
+            name="allowOpenId"
+            [(ngModel)]="ssoConfig.useSso"
+          />
+          <label class="form-check-label" for="allowOpenId">Enable Openid</label>
+        </div>
+      </div>
+      <div class="form-group">
+        <label for="identifier">{{ "identifier" | i18n }}</label>
+        <input
+          id="identifier"
+          class="form-control"
+          type="text"
+          name="Identifier"
+          [(ngModel)]="org.identifier"
+        />
+      </div>
+      <div class="form-group">
+        <label for="authority">{{ "authority" | i18n }}</label>
+        <input
+          id="authority"
+          class="form-control"
+          type="text"
+          name="Authority"
+          [(ngModel)]="ssoConfig.authority"
+        />
+      </div>
+      <div class="form-group">
+        <label for="clientid">{{ "clientId" | i18n }}</label>
+        <input
+          id="clientid"
+          class="form-control"
+          type="text"
+          name="Client-Id"
+          [(ngModel)]="ssoConfig.clientId"
+        />
+      </div>
+      <div class="form-group">
+        <label for="clientsecret">{{ "clientSecret" | i18n }}</label>
+        <input
+          id="clientsecret"
+          class="form-control"
+          type="text"
+          name="Client-Secret"
+          [(ngModel)]="ssoConfig.clientSecret"
+        />
+      </div>
+      <div class="form-group">
+        <label for="callbackPath">{{ "callbackPath" | i18n }}</label>
+        <input
+          id="callbackPath"
+          class="form-control"
+          type="text"
+          name="Callback-Path"
+          [(ngModel)]="ssoConfig.callbackPath"
+        />
+      </div>
+      <div class="form-group">
+        <label for="signedOutCallbackPath">{{ "signedOutCallbackPath" | i18n }}</label>
+        <input
+          id="signedOutCallbackPath"
+          class="form-control"
+          type="text"
+          name="Signedout-Callbackpath"
+          [(ngModel)]="ssoConfig.signedOutCallbackPath"
+        />
+      </div>
+    </div>
+  </div>
+  <button type="submit" buttonType="primary" bitButton [loading]="form.loading">
+    {{ "save" | i18n }}
+  </button>
+</form>
diff --git a/apps/web/src/app/organizations/settings/openid.component.ts b/apps/web/src/app/organizations/settings/openid.component.ts
new file mode 100644
index 0000000..3dfa8fb
--- /dev/null
+++ b/apps/web/src/app/organizations/settings/openid.component.ts
@@ -0,0 +1,101 @@
+import { Component } from "@angular/core";
+import { ActivatedRoute } from "@angular/router";
+
+import { ModalService } from "@bitwarden/angular/services/modal.service";
+import { ApiService } from "@bitwarden/common/abstractions/api.service";
+import { I18nService } from "@bitwarden/common/abstractions/i18n.service";
+import { LogService } from "@bitwarden/common/abstractions/log.service";
+import { OrganizationService } from "@bitwarden/common/abstractions/organization.service";
+import { OrganizationApiServiceAbstraction } from "@bitwarden/common/abstractions/organization/organization-api.service.abstraction";
+import { PlatformUtilsService } from "@bitwarden/common/abstractions/platformUtils.service";
+import { SyncService } from "@bitwarden/common/abstractions/sync/sync.service.abstraction";
+import { Organization } from "@bitwarden/common/models/domain/organization";
+import { OrganizationOpenIdUpdateRequest } from "@bitwarden/common/models/request/organization/organizationOpenIdUpdateRequest";
+import { OrganizationUpdateRequest } from "@bitwarden/common/models/request/organizationUpdateRequest";
+import { OrganizationOpenIdResponse } from "@bitwarden/common/models/response/organization/organizationOpenIdResponse";
+import { OrganizationResponse } from "@bitwarden/common/models/response/organizationResponse";
+
+@Component({
+  selector: "app-org-openid",
+  templateUrl: "openid.component.html",
+})
+// eslint-disable-next-line rxjs-angular/prefer-takeuntil
+export class OpenIdComponent {
+  showOpenIdCustomizations = true;
+
+  selfHosted = false;
+  loading = true;
+  organizationId: string;
+  organization: Organization;
+  org: OrganizationResponse;
+  ssoConfig: OrganizationOpenIdResponse;
+  formPromise: Promise<boolean>;
+
+  signInCallbackPath: string;
+  signedOutCallbackPath: string;
+
+  constructor(
+    private modalService: ModalService,
+    private route: ActivatedRoute,
+    private apiService: ApiService,
+    private platformUtilsService: PlatformUtilsService,
+    private i18nService: I18nService,
+    private logService: LogService,
+    private syncService: SyncService,
+    private organizationService: OrganizationService,
+    private organizationApiService: OrganizationApiServiceAbstraction
+  ) {}
+
+  async ngOnInit() {
+    this.selfHosted = false;
+
+    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe
+    this.route.parent.parent.params.subscribe(async (params) => {
+      this.organizationId = params.organizationId;
+      try {
+        this.org = await this.organizationApiService.get(this.organizationId);
+        this.ssoConfig = await this.organizationApiService.getOpenId(this.organizationId);
+        this.organization = await this.organizationService.get(this.organizationId);
+      } catch (e) {
+        this.logService.error(e);
+      }
+    });
+
+    this.loading = false;
+  }
+
+  async submit() {
+    try {
+      const requestSso = new OrganizationOpenIdUpdateRequest();
+      requestSso.useSso = this.ssoConfig.useSso;
+      requestSso.authority = this.ssoConfig.authority;
+      requestSso.clientId = this.ssoConfig.clientId;
+      requestSso.clientSecret = this.ssoConfig.clientSecret;
+      requestSso.callbackPath = this.ssoConfig.callbackPath;
+      requestSso.signedOutCallbackPath = this.ssoConfig.signedOutCallbackPath;
+
+      const requestOrg = new OrganizationUpdateRequest();
+      requestOrg.identifier = this.org.identifier;
+      requestOrg.name = this.org.name;
+      requestOrg.businessName = this.org.businessName;
+      requestOrg.billingEmail = this.org.billingEmail;
+
+      this.formPromise = this.organizationApiService
+        .updateOpenId(this.organizationId, requestSso)
+        .then(() => {
+          return this.syncService.fullSync(true);
+        });
+
+      this.formPromise = this.organizationApiService
+        .save(this.organizationId, requestOrg)
+        .then(() => {
+          return this.syncService.fullSync(true);
+        });
+
+      await this.formPromise;
+      this.platformUtilsService.showToast("success", null, "Updated OpenID Connect settings.");
+    } catch (e) {
+      this.logService.error(e);
+    }
+  }
+}
diff --git a/apps/web/src/app/organizations/settings/settings.component.html b/apps/web/src/app/organizations/settings/settings.component.html
index ad9824e..08c514b 100644
--- a/apps/web/src/app/organizations/settings/settings.component.html
+++ b/apps/web/src/app/organizations/settings/settings.component.html
@@ -1,7 +1,7 @@
 <div class="container page-content">
   <div class="row">
     <div class="col-3">
-      <div class="card">
+      <div class="card" *ngIf="organization">
         <div class="card-header">{{ "settings" | i18n }}</div>
         <div class="list-group list-group-flush">
           <a routerLink="account" class="list-group-item" routerLinkActive="active">
@@ -26,6 +26,14 @@
           >
             {{ "twoStepLogin" | i18n }}
           </a>
+          <a
+            routerLink="openid-connect"
+            class="list-group-item"
+            routerLinkActive="active"
+            *ngIf="organization.canManageSso"
+          >
+            Openid Connect
+          </a>
         </div>
       </div>
     </div>
diff --git a/apps/web/src/app/organizations/settings/settings.component.ts b/apps/web/src/app/organizations/settings/settings.component.ts
index 3186085..226fc25 100644
--- a/apps/web/src/app/organizations/settings/settings.component.ts
+++ b/apps/web/src/app/organizations/settings/settings.component.ts
@@ -1,17 +1,19 @@
-import { Component } from "@angular/core";
+import { Component, OnInit } from "@angular/core";
 import { ActivatedRoute } from "@angular/router";
 
 import { OrganizationService } from "@bitwarden/common/abstractions/organization.service";
 import { PlatformUtilsService } from "@bitwarden/common/abstractions/platformUtils.service";
+import { Organization } from "@bitwarden/common/models/domain/organization";
 
 @Component({
   selector: "app-org-settings",
   templateUrl: "settings.component.html",
 })
 // eslint-disable-next-line rxjs-angular/prefer-takeuntil
-export class SettingsComponent {
+export class SettingsComponent implements OnInit {
   access2fa = false;
   showBilling: boolean;
+  organization: Organization;
 
   constructor(
     private route: ActivatedRoute,
@@ -25,6 +27,7 @@ export class SettingsComponent {
       const organization = await this.organizationService.get(params.organizationId);
       this.showBilling = !this.platformUtilsService.isSelfHost() && organization.canManageBilling;
       this.access2fa = organization.use2fa;
+      this.organization = organization;
     });
   }
 }
diff --git a/apps/web/src/app/organizations/vault/vault.component.ts b/apps/web/src/app/organizations/vault/vault.component.ts
index f9c378b..67d00e3 100644
--- a/apps/web/src/app/organizations/vault/vault.component.ts
+++ b/apps/web/src/app/organizations/vault/vault.component.ts
@@ -81,11 +81,7 @@ export class VaultComponent implements OnInit, OnDestroy {
   ) {}
 
   ngOnInit() {
-    this.trashCleanupWarning = this.i18nService.t(
-      this.platformUtilsService.isSelfHost()
-        ? "trashCleanupWarningSelfHosted"
-        : "trashCleanupWarning"
-    );
+    this.trashCleanupWarning = this.i18nService.t("trashCleanupWarningSelfHosted");
     // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe
     this.route.parent.params.subscribe(async (params: any) => {
       this.organization = await this.organizationService.get(params.organizationId);
diff --git a/apps/web/src/app/send/access.component.html b/apps/web/src/app/send/access.component.html
index b581861..bfcbc35 100644
--- a/apps/web/src/app/send/access.component.html
+++ b/apps/web/src/app/send/access.component.html
@@ -137,15 +137,6 @@
     <div class="col-12 text-center mt-5 text-muted">
       <p class="mb-0">
         {{ "sendAccessTaglineProductDesc" | i18n }}<br />
-        {{ "sendAccessTaglineLearnMore" | i18n }}
-        <a href="https://www.bitwarden.com/products/send?source=web-vault" target="_blank"
-          >Bitwarden Send</a
-        >
-        {{ "sendAccessTaglineOr" | i18n }}
-        <a href="https://vault.bitwarden.com/#/register" target="_blank">{{
-          "sendAccessTaglineSignUp" | i18n
-        }}</a>
-        {{ "sendAccessTaglineTryToday" | i18n }}
       </p>
     </div>
   </div>
diff --git a/apps/web/src/app/settings/settings.component.ts b/apps/web/src/app/settings/settings.component.ts
index 6e9fa21..75e7859 100644
--- a/apps/web/src/app/settings/settings.component.ts
+++ b/apps/web/src/app/settings/settings.component.ts
@@ -55,10 +55,6 @@ export class SettingsComponent implements OnInit, OnDestroy {
     this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();
     const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();
     let billing = null;
-    if (!this.selfHosted) {
-      billing = await this.apiService.getUserBillingHistory();
-    }
-    this.hideSubscription =
-      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);
+    this.hideSubscription = true;
   }
 }
diff --git a/apps/web/src/app/settings/user-billing-history.component.ts b/apps/web/src/app/settings/user-billing-history.component.ts
index dfc3216..f469357 100644
--- a/apps/web/src/app/settings/user-billing-history.component.ts
+++ b/apps/web/src/app/settings/user-billing-history.component.ts
@@ -39,7 +39,7 @@ export class UserBillingHistoryComponent implements OnInit {
       return;
     }
     this.loading = true;
-    this.billing = await this.apiService.getUserBillingHistory();
+    this.billing = null;
     this.loading = false;
   }
 
diff --git a/apps/web/src/app/shared/loose-components.module.ts b/apps/web/src/app/shared/loose-components.module.ts
index c68741b..d3a9dfa 100644
--- a/apps/web/src/app/shared/loose-components.module.ts
+++ b/apps/web/src/app/shared/loose-components.module.ts
@@ -64,6 +64,7 @@ import { ChangePlanComponent } from "../organizations/settings/change-plan.compo
 import { DeleteOrganizationComponent } from "../organizations/settings/delete-organization.component";
 import { DownloadLicenseComponent } from "../organizations/settings/download-license.component";
 import { ImageSubscriptionHiddenComponent as OrgSubscriptionHiddenComponent } from "../organizations/settings/image-subscription-hidden.component";
+import { OpenIdComponent as OrgOpenIdComponent } from "../organizations/settings/openid.component";
 import { OrganizationBillingComponent } from "../organizations/settings/organization-billing.component";
 import { OrganizationSubscriptionComponent } from "../organizations/settings/organization-subscription.component";
 import { SettingsComponent as OrgSettingComponent } from "../organizations/settings/settings.component";
@@ -234,6 +235,7 @@ import { SharedModule } from ".";
     OrgInactiveTwoFactorReportComponent,
     OrgManageCollectionsComponent,
     OrgManageComponent,
+    OrgOpenIdComponent,
     OrgPeopleComponent,
     OrgPoliciesComponent,
     OrgPolicyEditComponent,
@@ -378,6 +380,7 @@ import { SharedModule } from ".";
     OrgInactiveTwoFactorReportComponent,
     OrgManageCollectionsComponent,
     OrgManageComponent,
+    OrgOpenIdComponent,
     OrgPeopleComponent,
     OrgPoliciesComponent,
     OrgPolicyEditComponent,
diff --git a/apps/web/src/app/vault/vault.component.ts b/apps/web/src/app/vault/vault.component.ts
index c9d6b59..3fccac1 100644
--- a/apps/web/src/app/vault/vault.component.ts
+++ b/apps/web/src/app/vault/vault.component.ts
@@ -91,11 +91,7 @@ export class VaultComponent implements OnInit, OnDestroy {
   async ngOnInit() {
     this.showVerifyEmail = !(await this.tokenService.getEmailVerified());
     this.showBrowserOutdated = window.navigator.userAgent.indexOf("MSIE") !== -1;
-    this.trashCleanupWarning = this.i18nService.t(
-      this.platformUtilsService.isSelfHost()
-        ? "trashCleanupWarningSelfHosted"
-        : "trashCleanupWarning"
-    );
+    this.trashCleanupWarning = this.i18nService.t("trashCleanupWarningSelfHosted");
 
     // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe
     this.route.queryParams.pipe(first()).subscribe(async (params) => {
diff --git a/apps/web/src/scss/styles.scss b/apps/web/src/scss/styles.scss
index dc1c740..80e1fa8 100644
--- a/apps/web/src/scss/styles.scss
+++ b/apps/web/src/scss/styles.scss
@@ -57,3 +57,107 @@
 @import "./tables";
 @import "./toasts";
 @import "./vault-filters";
+
+/**** START Vaultwarden CHANGES ****/
+/* This combines all selectors extending it into one */
+%vw-hide {
+  display: none !important;
+}
+
+/* This allows searching for the combined style in the browsers dev-tools (look into the head tag) */
+#vw-hide,
+head {
+  @extend %vw-hide;
+}
+
+/* Hide any link pointing to billing */
+a[href$="/settings/billing"] {
+  @extend %vw-hide;
+}
+
+/* Hide any link pointing to subscriptions */
+a[href$="/settings/subscription"] {
+  @extend %vw-hide;
+}
+
+/* Hide any link pointing to Sponsored Families */
+a[href$="/settings/sponsored-families"] {
+  @extend %vw-hide;
+}
+
+/* Hide Two-Factor menu in Organization settings */
+app-org-settings a[href$="/settings/two-factor"] {
+  @extend %vw-hide;
+}
+
+/* Hide SSO menu in Organization manage */
+app-org-manage a[href$="/manage/sso"] {
+  @extend %vw-hide;
+}
+
+/* Hide Business Owned checkbox */
+app-org-info > form:nth-child(1) > div:nth-child(3) {
+  @extend %vw-hide;
+}
+
+/* Hide organization plans */
+app-organization-plans > form > div.form-check {
+  @extend %vw-hide;
+}
+app-organization-plans > form > h2.mt-5 {
+  @extend %vw-hide;
+}
+
+/* Hide the `This account is owned by a business` checkbox and label */
+#ownedBusiness,
+label[for^="ownedBusiness"] {
+  @extend %vw-hide;
+}
+
+/* Hide External Id field for Collections */
+app-collection-add-edit form div.form-group:nth-child(2) {
+  @extend %vw-hide;
+}
+
+/* Hide the radio button and label for the `Custom` org user type */
+#userTypeCustom,
+label[for^="userTypeCustom"] {
+  @extend %vw-hide;
+}
+
+/* Hide Business Name and Identifier */
+app-org-account form div.form-group:nth-child(3) {
+  @extend %vw-hide;
+}
+app-org-account form div.form-group:nth-child(4) {
+  @extend %vw-hide;
+}
+
+/* Hide Tax Info and Form in Organization settings */
+app-org-account > div.secondary-header:nth-child(3) {
+  @extend %vw-hide;
+}
+app-org-account > div.secondary-header:nth-child(3) + p {
+  @extend %vw-hide;
+}
+app-org-account > div.secondary-header:nth-child(3) + p + form {
+  @extend %vw-hide;
+}
+
+/* Hide Firefox Relay - It is CORS protected for SaaS only */
+#forwardtype_firefoxrelay,
+label[for^="forwardtype_firefoxrelay"] {
+  @extend %vw-hide;
+}
+
+/* Hide DuckDuckGo - It does not work for self-hosted either. */
+#forwardtype_duckduckgo,
+label[for^="forwardtype_duckduckgo"] {
+  @extend %vw-hide;
+}
+
+/* Hide Device Verification form at the Two Step Login screen */
+app-security > app-two-factor-setup > form {
+  @extend %vw-hide;
+}
+/**** END Vaultwarden CHANGES ****/
diff --git a/libs/angular/src/components/register.component.ts b/libs/angular/src/components/register.component.ts
index 5d0e708..9e45a61 100644
--- a/libs/angular/src/components/register.component.ts
+++ b/libs/angular/src/components/register.component.ts
@@ -35,7 +35,7 @@ export class RegisterComponent extends CaptchaProtectedComponent implements OnIn
   showPassword = false;
   formPromise: Promise<RegisterResponse>;
   referenceData: ReferenceEventRequest;
-  showTerms = true;
+  showTerms = false;
   showErrorSummary = false;
   passwordStrengthResult: any;
   color: string;
@@ -88,7 +88,7 @@ export class RegisterComponent extends CaptchaProtectedComponent implements OnIn
     protected logService: LogService
   ) {
     super(environmentService, i18nService, platformUtilsService);
-    this.showTerms = !platformUtilsService.isSelfHost();
+    this.showTerms = false;
   }
 
   async ngOnInit() {
@@ -96,6 +96,15 @@ export class RegisterComponent extends CaptchaProtectedComponent implements OnIn
   }
 
   async submit(showToast = true) {
+    if (typeof crypto.subtle === 'undefined') {
+      this.platformUtilsService.showToast(
+        "error",
+        "This browser requires HTTPS to use the web vault",
+        "Check the Vaultwarden wiki for details on how to enable it"
+      );
+      return;
+    }
+
     let email = this.formGroup.get("email")?.value;
     email = email.trim().toLowerCase();
     let name = this.formGroup.get("name")?.value;
diff --git a/libs/common/src/abstractions/organization/organization-api.service.abstraction.ts b/libs/common/src/abstractions/organization/organization-api.service.abstraction.ts
index ffd9550..11460b8 100644
--- a/libs/common/src/abstractions/organization/organization-api.service.abstraction.ts
+++ b/libs/common/src/abstractions/organization/organization-api.service.abstraction.ts
@@ -1,4 +1,5 @@
 import { OrganizationApiKeyType } from "../../enums/organizationApiKeyType";
+import { OrganizationOpenIdUpdateRequest } from "../../models/request//organization/organizationOpenIdUpdateRequest";
 import { ImportDirectoryRequest } from "../../models/request/importDirectoryRequest";
 import { OrganizationSsoRequest } from "../../models/request/organization/organizationSsoRequest";
 import { OrganizationApiKeyRequest } from "../../models/request/organizationApiKeyRequest";
@@ -16,6 +17,7 @@ import { VerifyBankRequest } from "../../models/request/verifyBankRequest";
 import { ApiKeyResponse } from "../../models/response/apiKeyResponse";
 import { BillingResponse } from "../../models/response/billingResponse";
 import { ListResponse } from "../../models/response/listResponse";
+import { OrganizationOpenIdResponse } from "../../models/response/organization/organizationOpenIdResponse";
 import { OrganizationSsoResponse } from "../../models/response/organization/organizationSsoResponse";
 import { OrganizationApiKeyInformationResponse } from "../../models/response/organizationApiKeyInformationResponse";
 import { OrganizationAutoEnrollStatusResponse } from "../../models/response/organizationAutoEnrollStatusResponse";
@@ -58,4 +60,9 @@ export class OrganizationApiServiceAbstraction {
   updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;
   getSso: (id: string) => Promise<OrganizationSsoResponse>;
   updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;
+  getOpenId: (id: string) => Promise<OrganizationOpenIdResponse>;
+  updateOpenId: (
+    id: string,
+    request: OrganizationOpenIdUpdateRequest
+  ) => Promise<OrganizationOpenIdResponse>;
 }
diff --git a/libs/common/src/models/request/organization/organizationOpenIdUpdateRequest.ts b/libs/common/src/models/request/organization/organizationOpenIdUpdateRequest.ts
new file mode 100644
index 0000000..31ffd7d
--- /dev/null
+++ b/libs/common/src/models/request/organization/organizationOpenIdUpdateRequest.ts
@@ -0,0 +1,8 @@
+export class OrganizationOpenIdUpdateRequest {
+  useSso: boolean;
+  authority: string;
+  callbackPath: string;
+  signedOutCallbackPath: string;
+  clientId: string;
+  clientSecret: string;
+}
diff --git a/libs/common/src/models/response/organization/organizationOpenIdResponse.ts b/libs/common/src/models/response/organization/organizationOpenIdResponse.ts
new file mode 100644
index 0000000..62298f5
--- /dev/null
+++ b/libs/common/src/models/response/organization/organizationOpenIdResponse.ts
@@ -0,0 +1,20 @@
+import { BaseResponse } from "../baseResponse";
+
+export class OrganizationOpenIdResponse extends BaseResponse {
+  useSso: boolean;
+  authority: string;
+  callbackPath: string;
+  signedOutCallbackPath: string;
+  clientId: string;
+  clientSecret: string;
+
+  constructor(response: any) {
+    super(response);
+    this.useSso = this.getResponseProperty("UseSso");
+    this.authority = this.getResponseProperty("Authority");
+    this.callbackPath = this.getResponseProperty("CallbackPath");
+    this.signedOutCallbackPath = this.getResponseProperty("SignedOutCallbackPath");
+    this.clientId = this.getResponseProperty("ClientId");
+    this.clientSecret = this.getResponseProperty("ClientSecret");
+  }
+}
diff --git a/libs/common/src/services/organization/organization-api.service.ts b/libs/common/src/services/organization/organization-api.service.ts
index 4efc332..adb8074 100644
--- a/libs/common/src/services/organization/organization-api.service.ts
+++ b/libs/common/src/services/organization/organization-api.service.ts
@@ -1,6 +1,7 @@
 import { ApiService } from "../../abstractions/api.service";
 import { OrganizationApiServiceAbstraction } from "../../abstractions/organization/organization-api.service.abstraction";
 import { OrganizationApiKeyType } from "../../enums/organizationApiKeyType";
+import { OrganizationOpenIdUpdateRequest } from "../../models/request//organization/organizationOpenIdUpdateRequest";
 import { ImportDirectoryRequest } from "../../models/request/importDirectoryRequest";
 import { OrganizationSsoRequest } from "../../models/request/organization/organizationSsoRequest";
 import { OrganizationApiKeyRequest } from "../../models/request/organizationApiKeyRequest";
@@ -18,6 +19,7 @@ import { VerifyBankRequest } from "../../models/request/verifyBankRequest";
 import { ApiKeyResponse } from "../../models/response/apiKeyResponse";
 import { BillingResponse } from "../../models/response/billingResponse";
 import { ListResponse } from "../../models/response/listResponse";
+import { OrganizationOpenIdResponse } from "../../models/response/organization/organizationOpenIdResponse";
 import { OrganizationSsoResponse } from "../../models/response/organization/organizationSsoResponse";
 import { OrganizationApiKeyInformationResponse } from "../../models/response/organizationApiKeyInformationResponse";
 import { OrganizationAutoEnrollStatusResponse } from "../../models/response/organizationAutoEnrollStatusResponse";
@@ -260,4 +262,23 @@ export class OrganizationApiService implements OrganizationApiServiceAbstraction
     );
     return new OrganizationSsoResponse(r);
   }
+
+  async getOpenId(id: string): Promise<OrganizationOpenIdResponse> {
+    const r = await this.apiService.send("GET", "/organizations/" + id + "/sso", null, true, true);
+    return new OrganizationOpenIdResponse(r);
+  }
+
+  async updateOpenId(
+    id: string,
+    request: OrganizationOpenIdUpdateRequest
+  ): Promise<OrganizationOpenIdResponse> {
+    const r = await this.apiService.send(
+      "POST",
+      "/organizations/" + id + "/sso",
+      request,
+      true,
+      true
+    );
+    return new OrganizationOpenIdResponse(r);
+  }
 }
